@* nhận diện các file trong thư mục Models*@
@using BT1_project.Models
@*Khai báo kiểu dữ liệu của Model (có cũng được không có cũng được)*@
@model X.PagedList.IPagedList<ItemProduct>
@*Đối tượng để gọi hàm hiện thị phân trang*@
@using X.PagedList.Mvc.Core
@{
    //import file Layout.cshtml vao day
    Layout = "~/Areas/Admin/Views/Shared/Layout.cshtml";
}
@functions {
    public MyDbContext db = new MyDbContext();
    public string GetCategory(int _ProductId)
    {
        var record = (from item_category in db.Categories join item_category_product in db.CategoriesProducts on item_category.Id equals item_category_product.CategoryId join item_product in db.Products on item_category_product.ProductId equals item_product.Id where item_product.Id == _ProductId select item_category).ToList();
        string str = "";
        foreach (var item in record)
        {
            str += "<div>" + item.Name + "</div>";
        }
        return str;
    }
    public string GetTag(int _ProductId)
    {
        var record = (from item_tag in db.Tags join item_tag_product in db.TagsProducts on item_tag.Id equals item_tag_product.TagId join item_product in db.Products on item_tag_product.ProductId equals item_product.Id where item_product.Id == _ProductId select item_tag).ToList();
        string str = "";
        foreach (var item in record)
        {
            str += "<div>" + item.Name + "</div>";
        }
        return str;
    }
}


<div class="col-md-12">
    <div style="margin-bottom:5px;">
        <a href="/Admin/Products/Create" class="btn btn-primary">Create</a>
    </div>
    <div class="panel panel-primary">
        <div class="panel-heading" <div class="panel-heading" style="background-color:#337ab7; line-height:40px; color:white;padding-left:10px;">List Products</div>
        <div class="panel-body">
            <table class="table table-bordered table-hover">
                <tr>
                    <th style="width:100px;">Photo</th>
                    <th>Name</th>
                    <th style="width:200px;"></th>
                    <th style="width:200px;">Color</th>
                    <th style="width:70px; text-align:center;">Hot</th>
                    <th style="width:120px;"></th>
                </tr>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @*
                        File.Exists(duongdan) tra ve true neu duongdan ton tai, nguoc lai tra ve false
                        *@
                            @if (!String.IsNullOrEmpty(item.Photo))
                            {
                                <img src="~/Upload/Products/@item.Photo" style="width:100px;">
                            }
                        </td>
                        <td>@item.Name</td>
                        <td>@Html.Raw(GetCategory(item.Id))</td>
                        <td>@Html.Raw(GetTag(item.Id))</td>
                        <td style="text-align:center;">
                            @if (item.Hot == 1)
                            {
                                <span class="mdi mdi-check"></span>
                            }
                        </td>
                        <td style="text-align:center;">
                            <a href="/Admin/Products/Update/@item.Id">Update</a>&nbsp;
                            <a href="/Admin/Products/Delete/@item.Id" onclick="return window.confirm('Are you sure?');">Delete</a>
                        </td>
                    </tr>
                }
            </table>
            <style type="text/css">
                .pagination {
                    display: inline-block;
                    padding-left: 0;
                    margin: 20px 0;
                    border-radius: 4px
                }

                    .pagination > li {
                        display: inline
                    }

                        .pagination > li > a, .pagination > li > span {
                            position: relative;
                            float: left;
                            padding: 6px 12px;
                            margin-left: -1px;
                            line-height: 1.42857143;
                            color: #337ab7;
                            text-decoration: none;
                            background-color: #fff;
                            border: 1px solid #ddd
                        }

                            .pagination > li > a:focus, .pagination > li > a:hover, .pagination > li > span:focus, .pagination > li > span:hover {
                                z-index: 2;
                                color: #23527c;
                                background-color: #eee;
                                border-color: #ddd
                            }

                        .pagination > li:first-child > a, .pagination > li:first-child > span {
                            margin-left: 0;
                            border-top-left-radius: 4px;
                            border-bottom-left-radius: 4px
                        }

                        .pagination > li:last-child > a, .pagination > li:last-child > span {
                            border-top-right-radius: 4px;
                            border-bottom-right-radius: 4px
                        }

                    .pagination > .active > a, .pagination > .active > a:focus, .pagination > .active > a:hover, .pagination > .active > span, .pagination > .active > span:focus, .pagination > .active > span:hover {
                        z-index: 3;
                        color: #fff;
                        cursor: default;
                        background-color: #337ab7;
                        border-color: #337ab7
                    }

                    .pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disabled > span:focus, .pagination > .disabled > span:hover {
                        color: #777;
                        cursor: not-allowed;
                        background-color: #fff;
                        border-color: #ddd
                    }

                .pagination-lg > li > a, .pagination-lg > li > span {
                    padding: 10px 16px;
                    font-size: 18px;
                    line-height: 1.3333333
                }

                .pagination-lg > li:first-child > a, .pagination-lg > li:first-child > span {
                    border-top-left-radius: 6px;
                    border-bottom-left-radius: 6px
                }

                .pagination-lg > li:last-child > a, .pagination-lg > li:last-child > span {
                    border-top-right-radius: 6px;
                    border-bottom-right-radius: 6px
                }

                .pagination-sm > li > a, .pagination-sm > li > span {
                    padding: 5px 10px;
                    font-size: 12px;
                    line-height: 1.5
                }

                .pagination-sm > li:first-child > a, .pagination-sm > li:first-child > span {
                    border-top-left-radius: 3px;
                    border-bottom-left-radius: 3px
                }

                .pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {
                    border-top-right-radius: 3px;
                    border-bottom-right-radius: 3px
                }
            </style>
            <br />
            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",new { page }))
        </div>
    </div>
</div>